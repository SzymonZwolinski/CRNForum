@using Platender.Front.Models
@using Platender.Front.Components.Dialogs
@inject IDialogService DialogService
<MudPaper Style="min-width:50vw; min-height: 50vh;">
    <MudCarousel ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="true" TData="object"
        style="min-width:50vw; min-height: 50vh;">
        @foreach (var item in Items)
        {
            <MudCarouselItem Transition="Transition.Slide" Color="@Color.Inherit"
                style="border: 2px solid black; border-radius: 10px; display: flex; justify-content: center">
                <MudImage Src=@item.Image ObjectFit="ObjectFit.Contain" Fluid="true"
                    style="padding: 0 10% 0 10%; margin: 0 10% 0 10%;" @onclick="(() => OpenDialog(item.PlateId))">
                </MudImage>
            </MudCarouselItem>
        }
    </MudCarousel>
</MudPaper>

<style>
    .my-custom-class {
        backdrop-filter: blur(10px);
    }
</style>

@code {
    [Parameter]
    public IEnumerable<SpottImageCarouselItem> Items { get; set; }

    [Inject]
    private NavigationManager _navigationManager { get; set; }

    private void OpenDialog(Guid plateId)
    {
        var parameters = new DialogParameters<RedirectDialog>();
        parameters.Add(x => x.Content, "Do you want to check plate of this spott");
        parameters.Add(x => x.ButtonContent, "Yes");
        parameters.Add(x => x.RedirectPath, ("/plates/" + plateId.ToString()));
        var options = new DialogOptions { ClassBackground = "my-custom-class", CloseOnEscapeKey = true, NoHeader = true };
        DialogService.Show<RedirectDialog>("Simple Dialog", parameters, options);
    }
}
